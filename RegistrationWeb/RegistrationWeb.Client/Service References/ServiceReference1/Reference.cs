//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegistrationWeb.Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IRegistrationService")]
    public interface IRegistrationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getCourses", ReplyAction="http://tempuri.org/IRegistrationService/getCoursesResponse")]
        RegistrationWeb.ServiceReference1.CourseDAO[] getCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getCourses", ReplyAction="http://tempuri.org/IRegistrationService/getCoursesResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.CourseDAO[]> getCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getStudents", ReplyAction="http://tempuri.org/IRegistrationService/getStudentsResponse")]
        RegistrationWeb.ServiceReference1.StudentDAO[] getStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getStudents", ReplyAction="http://tempuri.org/IRegistrationService/getStudentsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentDAO[]> getStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/getStudentCourseListResponse")]
        RegistrationWeb.ServiceReference1.StudentCourseListDAO[] getStudentCourseList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/getStudentCourseListResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentCourseListDAO[]> getStudentCourseListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertCourse", ReplyAction="http://tempuri.org/IRegistrationService/insertCourseResponse")]
        bool insertCourse(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertCourse", ReplyAction="http://tempuri.org/IRegistrationService/insertCourseResponse")]
        System.Threading.Tasks.Task<bool> insertCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertStudent", ReplyAction="http://tempuri.org/IRegistrationService/insertStudentResponse")]
        bool insertStudent(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertStudent", ReplyAction="http://tempuri.org/IRegistrationService/insertStudentResponse")]
        System.Threading.Tasks.Task<bool> insertStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/insertStudentCourseListResponse")]
        bool insertStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/insertStudentCourseListResponse")]
        System.Threading.Tasks.Task<bool> insertStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateCourse", ReplyAction="http://tempuri.org/IRegistrationService/updateCourseResponse")]
        bool updateCourse(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateCourse", ReplyAction="http://tempuri.org/IRegistrationService/updateCourseResponse")]
        System.Threading.Tasks.Task<bool> updateCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteCourse", ReplyAction="http://tempuri.org/IRegistrationService/deleteCourseResponse")]
        bool deleteCourse(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteCourse", ReplyAction="http://tempuri.org/IRegistrationService/deleteCourseResponse")]
        System.Threading.Tasks.Task<bool> deleteCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateStudent", ReplyAction="http://tempuri.org/IRegistrationService/updateStudentResponse")]
        bool updateStudent(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateStudent", ReplyAction="http://tempuri.org/IRegistrationService/updateStudentResponse")]
        System.Threading.Tasks.Task<bool> updateStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteStudent", ReplyAction="http://tempuri.org/IRegistrationService/deleteStudentResponse")]
        bool deleteStudent(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteStudent", ReplyAction="http://tempuri.org/IRegistrationService/deleteStudentResponse")]
        System.Threading.Tasks.Task<bool> deleteStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/updateStudentCourseListResponse")]
        bool updateStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/updateStudentCourseListResponse")]
        System.Threading.Tasks.Task<bool> updateStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/deleteStudentCourseListResponse")]
        bool deleteStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/deleteStudentCourseListResponse")]
        System.Threading.Tasks.Task<bool> deleteStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/registerCourse", ReplyAction="http://tempuri.org/IRegistrationService/registerCourseResponse")]
        bool registerCourse(RegistrationWeb.ServiceReference1.StudentDAO student, RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/registerCourse", ReplyAction="http://tempuri.org/IRegistrationService/registerCourseResponse")]
        System.Threading.Tasks.Task<bool> registerCourseAsync(RegistrationWeb.ServiceReference1.StudentDAO student, RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/dropCourse", ReplyAction="http://tempuri.org/IRegistrationService/dropCourseResponse")]
        bool dropCourse(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/dropCourse", ReplyAction="http://tempuri.org/IRegistrationService/dropCourseResponse")]
        System.Threading.Tasks.Task<bool> dropCourseAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/scheduleCourse", ReplyAction="http://tempuri.org/IRegistrationService/scheduleCourseResponse")]
        bool scheduleCourse(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/scheduleCourse", ReplyAction="http://tempuri.org/IRegistrationService/scheduleCourseResponse")]
        System.Threading.Tasks.Task<bool> scheduleCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/cancelCourse", ReplyAction="http://tempuri.org/IRegistrationService/cancelCourseResponse")]
        bool cancelCourse(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/cancelCourse", ReplyAction="http://tempuri.org/IRegistrationService/cancelCourseResponse")]
        System.Threading.Tasks.Task<bool> cancelCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/modifyCourseTime", ReplyAction="http://tempuri.org/IRegistrationService/modifyCourseTimeResponse")]
        bool modifyCourseTime(RegistrationWeb.ServiceReference1.CourseDAO course, System.TimeSpan start, System.TimeSpan end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/modifyCourseTime", ReplyAction="http://tempuri.org/IRegistrationService/modifyCourseTimeResponse")]
        System.Threading.Tasks.Task<bool> modifyCourseTimeAsync(RegistrationWeb.ServiceReference1.CourseDAO course, System.TimeSpan start, System.TimeSpan end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/modifyCourseCapacity", ReplyAction="http://tempuri.org/IRegistrationService/modifyCourseCapacityResponse")]
        bool modifyCourseCapacity(RegistrationWeb.ServiceReference1.CourseDAO course, int capacity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/modifyCourseCapacity", ReplyAction="http://tempuri.org/IRegistrationService/modifyCourseCapacityResponse")]
        System.Threading.Tasks.Task<bool> modifyCourseCapacityAsync(RegistrationWeb.ServiceReference1.CourseDAO course, int capacity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/listEnrolledStudents", ReplyAction="http://tempuri.org/IRegistrationService/listEnrolledStudentsResponse")]
        RegistrationWeb.ServiceReference1.StudentDAO[] listEnrolledStudents(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/listEnrolledStudents", ReplyAction="http://tempuri.org/IRegistrationService/listEnrolledStudentsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentDAO[]> listEnrolledStudentsAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/listStudentSchedule", ReplyAction="http://tempuri.org/IRegistrationService/listStudentScheduleResponse")]
        RegistrationWeb.ServiceReference1.CourseDAO[] listStudentSchedule(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/listStudentSchedule", ReplyAction="http://tempuri.org/IRegistrationService/listStudentScheduleResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.CourseDAO[]> listStudentScheduleAsync(RegistrationWeb.ServiceReference1.StudentDAO student);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegistrationServiceChannel : RegistrationWeb.Client.ServiceReference1.IRegistrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistrationServiceClient : System.ServiceModel.ClientBase<RegistrationWeb.Client.ServiceReference1.IRegistrationService>, RegistrationWeb.Client.ServiceReference1.IRegistrationService {
        
        public RegistrationServiceClient() {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RegistrationWeb.ServiceReference1.CourseDAO[] getCourses() {
            return base.Channel.getCourses();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.CourseDAO[]> getCoursesAsync() {
            return base.Channel.getCoursesAsync();
        }
        
        public RegistrationWeb.ServiceReference1.StudentDAO[] getStudents() {
            return base.Channel.getStudents();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentDAO[]> getStudentsAsync() {
            return base.Channel.getStudentsAsync();
        }
        
        public RegistrationWeb.ServiceReference1.StudentCourseListDAO[] getStudentCourseList() {
            return base.Channel.getStudentCourseList();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentCourseListDAO[]> getStudentCourseListAsync() {
            return base.Channel.getStudentCourseListAsync();
        }
        
        public bool insertCourse(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.insertCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> insertCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.insertCourseAsync(course);
        }
        
        public bool insertStudent(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.insertStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> insertStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.insertStudentAsync(student);
        }
        
        public bool insertStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.insertStudentCourseList(scl);
        }
        
        public System.Threading.Tasks.Task<bool> insertStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.insertStudentCourseListAsync(scl);
        }
        
        public bool updateCourse(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.updateCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> updateCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.updateCourseAsync(course);
        }
        
        public bool deleteCourse(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.deleteCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> deleteCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.deleteCourseAsync(course);
        }
        
        public bool updateStudent(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.updateStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> updateStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.updateStudentAsync(student);
        }
        
        public bool deleteStudent(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.deleteStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> deleteStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.deleteStudentAsync(student);
        }
        
        public bool updateStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.updateStudentCourseList(scl);
        }
        
        public System.Threading.Tasks.Task<bool> updateStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.updateStudentCourseListAsync(scl);
        }
        
        public bool deleteStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.deleteStudentCourseList(scl);
        }
        
        public System.Threading.Tasks.Task<bool> deleteStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.deleteStudentCourseListAsync(scl);
        }
        
        public bool registerCourse(RegistrationWeb.ServiceReference1.StudentDAO student, RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.registerCourse(student, course);
        }
        
        public System.Threading.Tasks.Task<bool> registerCourseAsync(RegistrationWeb.ServiceReference1.StudentDAO student, RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.registerCourseAsync(student, course);
        }
        
        public bool dropCourse(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.dropCourse(scl);
        }
        
        public System.Threading.Tasks.Task<bool> dropCourseAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.dropCourseAsync(scl);
        }
        
        public bool scheduleCourse(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.scheduleCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> scheduleCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.scheduleCourseAsync(course);
        }
        
        public bool cancelCourse(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.cancelCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> cancelCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.cancelCourseAsync(course);
        }
        
        public bool modifyCourseTime(RegistrationWeb.ServiceReference1.CourseDAO course, System.TimeSpan start, System.TimeSpan end) {
            return base.Channel.modifyCourseTime(course, start, end);
        }
        
        public System.Threading.Tasks.Task<bool> modifyCourseTimeAsync(RegistrationWeb.ServiceReference1.CourseDAO course, System.TimeSpan start, System.TimeSpan end) {
            return base.Channel.modifyCourseTimeAsync(course, start, end);
        }
        
        public bool modifyCourseCapacity(RegistrationWeb.ServiceReference1.CourseDAO course, int capacity) {
            return base.Channel.modifyCourseCapacity(course, capacity);
        }
        
        public System.Threading.Tasks.Task<bool> modifyCourseCapacityAsync(RegistrationWeb.ServiceReference1.CourseDAO course, int capacity) {
            return base.Channel.modifyCourseCapacityAsync(course, capacity);
        }
        
        public RegistrationWeb.ServiceReference1.StudentDAO[] listEnrolledStudents(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.listEnrolledStudents(course);
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentDAO[]> listEnrolledStudentsAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.listEnrolledStudentsAsync(course);
        }
        
        public RegistrationWeb.ServiceReference1.CourseDAO[] listStudentSchedule(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.listStudentSchedule(student);
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.CourseDAO[]> listStudentScheduleAsync(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.listStudentScheduleAsync(student);
        }
    }
}

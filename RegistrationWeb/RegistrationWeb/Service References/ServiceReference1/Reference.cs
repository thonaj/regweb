//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegistrationWeb.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseDAO", Namespace="http://schemas.datacontract.org/2004/07/RegistrationClient.Models")]
    [System.SerializableAttribute()]
    public partial class CourseDAO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int courseCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int courseCreditsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string courseDeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int courseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string courseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string courseProfessorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> currentEnrollmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan endTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan startTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                if ((this.activeField.Equals(value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int courseCapacity {
            get {
                return this.courseCapacityField;
            }
            set {
                if ((this.courseCapacityField.Equals(value) != true)) {
                    this.courseCapacityField = value;
                    this.RaisePropertyChanged("courseCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int courseCredits {
            get {
                return this.courseCreditsField;
            }
            set {
                if ((this.courseCreditsField.Equals(value) != true)) {
                    this.courseCreditsField = value;
                    this.RaisePropertyChanged("courseCredits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string courseDept {
            get {
                return this.courseDeptField;
            }
            set {
                if ((object.ReferenceEquals(this.courseDeptField, value) != true)) {
                    this.courseDeptField = value;
                    this.RaisePropertyChanged("courseDept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int courseID {
            get {
                return this.courseIDField;
            }
            set {
                if ((this.courseIDField.Equals(value) != true)) {
                    this.courseIDField = value;
                    this.RaisePropertyChanged("courseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string courseName {
            get {
                return this.courseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.courseNameField, value) != true)) {
                    this.courseNameField = value;
                    this.RaisePropertyChanged("courseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string courseProfessor {
            get {
                return this.courseProfessorField;
            }
            set {
                if ((object.ReferenceEquals(this.courseProfessorField, value) != true)) {
                    this.courseProfessorField = value;
                    this.RaisePropertyChanged("courseProfessor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> currentEnrollment {
            get {
                return this.currentEnrollmentField;
            }
            set {
                if ((this.currentEnrollmentField.Equals(value) != true)) {
                    this.currentEnrollmentField = value;
                    this.RaisePropertyChanged("currentEnrollment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan endTime {
            get {
                return this.endTimeField;
            }
            set {
                if ((this.endTimeField.Equals(value) != true)) {
                    this.endTimeField = value;
                    this.RaisePropertyChanged("endTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan startTime {
            get {
                return this.startTimeField;
            }
            set {
                if ((this.startTimeField.Equals(value) != true)) {
                    this.startTimeField = value;
                    this.RaisePropertyChanged("startTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentDAO", Namespace="http://schemas.datacontract.org/2004/07/RegistrationClient.Models")]
    [System.SerializableAttribute()]
    public partial class StudentDAO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string majorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string middleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int studentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                if ((this.activeField.Equals(value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string major {
            get {
                return this.majorField;
            }
            set {
                if ((object.ReferenceEquals(this.majorField, value) != true)) {
                    this.majorField = value;
                    this.RaisePropertyChanged("major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string middleName {
            get {
                return this.middleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.middleNameField, value) != true)) {
                    this.middleNameField = value;
                    this.RaisePropertyChanged("middleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int studentID {
            get {
                return this.studentIDField;
            }
            set {
                if ((this.studentIDField.Equals(value) != true)) {
                    this.studentIDField = value;
                    this.RaisePropertyChanged("studentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentCourseListDAO", Namespace="http://schemas.datacontract.org/2004/07/RegistrationClient.Models")]
    [System.SerializableAttribute()]
    public partial class StudentCourseListDAO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RegistrationWeb.ServiceReference1.CourseDAO CourseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RegistrationWeb.ServiceReference1.StudentDAO StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentCourseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int courseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int studentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RegistrationWeb.ServiceReference1.CourseDAO Course {
            get {
                return this.CourseField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseField, value) != true)) {
                    this.CourseField = value;
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RegistrationWeb.ServiceReference1.StudentDAO Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentCourseID {
            get {
                return this.StudentCourseIDField;
            }
            set {
                if ((this.StudentCourseIDField.Equals(value) != true)) {
                    this.StudentCourseIDField = value;
                    this.RaisePropertyChanged("StudentCourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                if ((this.activeField.Equals(value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int courseID {
            get {
                return this.courseIDField;
            }
            set {
                if ((this.courseIDField.Equals(value) != true)) {
                    this.courseIDField = value;
                    this.RaisePropertyChanged("courseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int studentID {
            get {
                return this.studentIDField;
            }
            set {
                if ((this.studentIDField.Equals(value) != true)) {
                    this.studentIDField = value;
                    this.RaisePropertyChanged("studentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IRegistrationService")]
    public interface IRegistrationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getCourses", ReplyAction="http://tempuri.org/IRegistrationService/getCoursesResponse")]
        RegistrationWeb.ServiceReference1.CourseDAO[] getCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getCourses", ReplyAction="http://tempuri.org/IRegistrationService/getCoursesResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.CourseDAO[]> getCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getStudents", ReplyAction="http://tempuri.org/IRegistrationService/getStudentsResponse")]
        RegistrationWeb.ServiceReference1.StudentDAO[] getStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getStudents", ReplyAction="http://tempuri.org/IRegistrationService/getStudentsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentDAO[]> getStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/getStudentCourseListResponse")]
        RegistrationWeb.ServiceReference1.StudentCourseListDAO[] getStudentCourseList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/getStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/getStudentCourseListResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentCourseListDAO[]> getStudentCourseListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertCourse", ReplyAction="http://tempuri.org/IRegistrationService/insertCourseResponse")]
        bool insertCourse(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertCourse", ReplyAction="http://tempuri.org/IRegistrationService/insertCourseResponse")]
        System.Threading.Tasks.Task<bool> insertCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertStudent", ReplyAction="http://tempuri.org/IRegistrationService/insertStudentResponse")]
        bool insertStudent(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertStudent", ReplyAction="http://tempuri.org/IRegistrationService/insertStudentResponse")]
        System.Threading.Tasks.Task<bool> insertStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/insertStudentCourseListResponse")]
        bool insertStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/insertStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/insertStudentCourseListResponse")]
        System.Threading.Tasks.Task<bool> insertStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateCourse", ReplyAction="http://tempuri.org/IRegistrationService/updateCourseResponse")]
        bool updateCourse(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateCourse", ReplyAction="http://tempuri.org/IRegistrationService/updateCourseResponse")]
        System.Threading.Tasks.Task<bool> updateCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteCourse", ReplyAction="http://tempuri.org/IRegistrationService/deleteCourseResponse")]
        bool deleteCourse(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteCourse", ReplyAction="http://tempuri.org/IRegistrationService/deleteCourseResponse")]
        System.Threading.Tasks.Task<bool> deleteCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateStudent", ReplyAction="http://tempuri.org/IRegistrationService/updateStudentResponse")]
        bool updateStudent(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateStudent", ReplyAction="http://tempuri.org/IRegistrationService/updateStudentResponse")]
        System.Threading.Tasks.Task<bool> updateStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteStudent", ReplyAction="http://tempuri.org/IRegistrationService/deleteStudentResponse")]
        bool deleteStudent(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteStudent", ReplyAction="http://tempuri.org/IRegistrationService/deleteStudentResponse")]
        System.Threading.Tasks.Task<bool> deleteStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/updateStudentCourseListResponse")]
        bool updateStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/updateStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/updateStudentCourseListResponse")]
        System.Threading.Tasks.Task<bool> updateStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/deleteStudentCourseListResponse")]
        bool deleteStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/deleteStudentCourseList", ReplyAction="http://tempuri.org/IRegistrationService/deleteStudentCourseListResponse")]
        System.Threading.Tasks.Task<bool> deleteStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/registerCourse", ReplyAction="http://tempuri.org/IRegistrationService/registerCourseResponse")]
        bool registerCourse(RegistrationWeb.ServiceReference1.StudentDAO student, RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/registerCourse", ReplyAction="http://tempuri.org/IRegistrationService/registerCourseResponse")]
        System.Threading.Tasks.Task<bool> registerCourseAsync(RegistrationWeb.ServiceReference1.StudentDAO student, RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/dropCourse", ReplyAction="http://tempuri.org/IRegistrationService/dropCourseResponse")]
        bool dropCourse(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/dropCourse", ReplyAction="http://tempuri.org/IRegistrationService/dropCourseResponse")]
        System.Threading.Tasks.Task<bool> dropCourseAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/scheduleCourse", ReplyAction="http://tempuri.org/IRegistrationService/scheduleCourseResponse")]
        bool scheduleCourse(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/scheduleCourse", ReplyAction="http://tempuri.org/IRegistrationService/scheduleCourseResponse")]
        System.Threading.Tasks.Task<bool> scheduleCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/cancelCourse", ReplyAction="http://tempuri.org/IRegistrationService/cancelCourseResponse")]
        bool cancelCourse(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/cancelCourse", ReplyAction="http://tempuri.org/IRegistrationService/cancelCourseResponse")]
        System.Threading.Tasks.Task<bool> cancelCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/modifyCourseTime", ReplyAction="http://tempuri.org/IRegistrationService/modifyCourseTimeResponse")]
        bool modifyCourseTime(RegistrationWeb.ServiceReference1.CourseDAO course, System.TimeSpan start, System.TimeSpan end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/modifyCourseTime", ReplyAction="http://tempuri.org/IRegistrationService/modifyCourseTimeResponse")]
        System.Threading.Tasks.Task<bool> modifyCourseTimeAsync(RegistrationWeb.ServiceReference1.CourseDAO course, System.TimeSpan start, System.TimeSpan end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/modifyCourseCapacity", ReplyAction="http://tempuri.org/IRegistrationService/modifyCourseCapacityResponse")]
        bool modifyCourseCapacity(RegistrationWeb.ServiceReference1.CourseDAO course, int capacity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/modifyCourseCapacity", ReplyAction="http://tempuri.org/IRegistrationService/modifyCourseCapacityResponse")]
        System.Threading.Tasks.Task<bool> modifyCourseCapacityAsync(RegistrationWeb.ServiceReference1.CourseDAO course, int capacity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/listEnrolledStudents", ReplyAction="http://tempuri.org/IRegistrationService/listEnrolledStudentsResponse")]
        RegistrationWeb.ServiceReference1.StudentDAO[] listEnrolledStudents(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/listEnrolledStudents", ReplyAction="http://tempuri.org/IRegistrationService/listEnrolledStudentsResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentDAO[]> listEnrolledStudentsAsync(RegistrationWeb.ServiceReference1.CourseDAO course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/listStudentSchedule", ReplyAction="http://tempuri.org/IRegistrationService/listStudentScheduleResponse")]
        RegistrationWeb.ServiceReference1.CourseDAO[] listStudentSchedule(RegistrationWeb.ServiceReference1.StudentDAO student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/listStudentSchedule", ReplyAction="http://tempuri.org/IRegistrationService/listStudentScheduleResponse")]
        System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.CourseDAO[]> listStudentScheduleAsync(RegistrationWeb.ServiceReference1.StudentDAO student);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegistrationServiceChannel : RegistrationWeb.ServiceReference1.IRegistrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistrationServiceClient : System.ServiceModel.ClientBase<RegistrationWeb.ServiceReference1.IRegistrationService>, RegistrationWeb.ServiceReference1.IRegistrationService {
        
        public RegistrationServiceClient() {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RegistrationWeb.ServiceReference1.CourseDAO[] getCourses() {
            return base.Channel.getCourses();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.CourseDAO[]> getCoursesAsync() {
            return base.Channel.getCoursesAsync();
        }
        
        public RegistrationWeb.ServiceReference1.StudentDAO[] getStudents() {
            return base.Channel.getStudents();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentDAO[]> getStudentsAsync() {
            return base.Channel.getStudentsAsync();
        }
        
        public RegistrationWeb.ServiceReference1.StudentCourseListDAO[] getStudentCourseList() {
            return base.Channel.getStudentCourseList();
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentCourseListDAO[]> getStudentCourseListAsync() {
            return base.Channel.getStudentCourseListAsync();
        }
        
        public bool insertCourse(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.insertCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> insertCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.insertCourseAsync(course);
        }
        
        public bool insertStudent(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.insertStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> insertStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.insertStudentAsync(student);
        }
        
        public bool insertStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.insertStudentCourseList(scl);
        }
        
        public System.Threading.Tasks.Task<bool> insertStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.insertStudentCourseListAsync(scl);
        }
        
        public bool updateCourse(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.updateCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> updateCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.updateCourseAsync(course);
        }
        
        public bool deleteCourse(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.deleteCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> deleteCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.deleteCourseAsync(course);
        }
        
        public bool updateStudent(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.updateStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> updateStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.updateStudentAsync(student);
        }
        
        public bool deleteStudent(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.deleteStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> deleteStudentAsync(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.deleteStudentAsync(student);
        }
        
        public bool updateStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.updateStudentCourseList(scl);
        }
        
        public System.Threading.Tasks.Task<bool> updateStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.updateStudentCourseListAsync(scl);
        }
        
        public bool deleteStudentCourseList(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.deleteStudentCourseList(scl);
        }
        
        public System.Threading.Tasks.Task<bool> deleteStudentCourseListAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.deleteStudentCourseListAsync(scl);
        }
        
        public bool registerCourse(RegistrationWeb.ServiceReference1.StudentDAO student, RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.registerCourse(student, course);
        }
        
        public System.Threading.Tasks.Task<bool> registerCourseAsync(RegistrationWeb.ServiceReference1.StudentDAO student, RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.registerCourseAsync(student, course);
        }
        
        public bool dropCourse(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.dropCourse(scl);
        }
        
        public System.Threading.Tasks.Task<bool> dropCourseAsync(RegistrationWeb.ServiceReference1.StudentCourseListDAO scl) {
            return base.Channel.dropCourseAsync(scl);
        }
        
        public bool scheduleCourse(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.scheduleCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> scheduleCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.scheduleCourseAsync(course);
        }
        
        public bool cancelCourse(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.cancelCourse(course);
        }
        
        public System.Threading.Tasks.Task<bool> cancelCourseAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.cancelCourseAsync(course);
        }
        
        public bool modifyCourseTime(RegistrationWeb.ServiceReference1.CourseDAO course, System.TimeSpan start, System.TimeSpan end) {
            return base.Channel.modifyCourseTime(course, start, end);
        }
        
        public System.Threading.Tasks.Task<bool> modifyCourseTimeAsync(RegistrationWeb.ServiceReference1.CourseDAO course, System.TimeSpan start, System.TimeSpan end) {
            return base.Channel.modifyCourseTimeAsync(course, start, end);
        }
        
        public bool modifyCourseCapacity(RegistrationWeb.ServiceReference1.CourseDAO course, int capacity) {
            return base.Channel.modifyCourseCapacity(course, capacity);
        }
        
        public System.Threading.Tasks.Task<bool> modifyCourseCapacityAsync(RegistrationWeb.ServiceReference1.CourseDAO course, int capacity) {
            return base.Channel.modifyCourseCapacityAsync(course, capacity);
        }
        
        public RegistrationWeb.ServiceReference1.StudentDAO[] listEnrolledStudents(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.listEnrolledStudents(course);
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.StudentDAO[]> listEnrolledStudentsAsync(RegistrationWeb.ServiceReference1.CourseDAO course) {
            return base.Channel.listEnrolledStudentsAsync(course);
        }
        
        public RegistrationWeb.ServiceReference1.CourseDAO[] listStudentSchedule(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.listStudentSchedule(student);
        }
        
        public System.Threading.Tasks.Task<RegistrationWeb.ServiceReference1.CourseDAO[]> listStudentScheduleAsync(RegistrationWeb.ServiceReference1.StudentDAO student) {
            return base.Channel.listStudentScheduleAsync(student);
        }
    }
}
